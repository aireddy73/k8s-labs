apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: myapp
data:
  MYSQL_DATABASE: "wp"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql
  namespace: myapp
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: admin-password
  MYSQL_USER: mysql
  MYSQL_PASSWORD: r00tme
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pv-claim
  namespace: myapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  namespace: myapp
  labels:
    app: myapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress
  namespace: myapp
  labels:
    app: myapp
spec:
  selector:
    matchLabels:
      app: myapp
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: myapp
        tier: frontend
    spec:
      containers:
      - image: wordpress:5.2-apache
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
            add:
            - CHOWN
            - SETUID
            - FSETID
            - SETGID
            - FOWNER
            - DAC_OVERRIDE
            - AUDIT_WRITE
            - AUDIT_READ
            - NET_ADMIN
            - NET_BIND_SERVICE
#            - SYSLOG
#            - LEASE
#            - MKNOD
#            - SETFCAP
#            - SETPCAP
#            - SYS_ADMIN
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql.myapp.svc.cluster.local:31234
        - name: WORDPRESS_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: mysql
              key: MYSQL_DATABASE
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql
              key: MYSQL_USER
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: MYSQL_PASSWORD
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 45
          periodSeconds: 8
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 3 
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-pv
          mountPath: /var/www/html
      volumes:
      - name: wordpress-pv
        persistentVolumeClaim:
          claimName: wp-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: myapp
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.6
        securityContext:
#          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
            add:
            - CHOWN
            - SETUID
            - FSETID
            - SETGID
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1", "-umysql", "-pr00tme"]
          initialDelaySeconds: 5
          periodSeconds: 2
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          periodSeconds: 10
          initialDelaySeconds: 10
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-vol
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: admin-password
        - name: MYSQL_USER
          value: mysql
        - name: MYSQL_PASSWORD
          value: r00tme
        - name: MYSQL_DATABASE
          value: wp
        envFrom:
        - secretRef:
            name: mysql
        - configMapRef:
            name: mysql
      volumes:
        - name: mysql-vol
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: myapp
  name: wordpress-mysql
spec:
  type: NodePort
  selector:
    app: mysql
  ports:
  - protocol: TCP
    nodePort: 31234 # Worker Node port to be used, default:random
    port: 31234   # cluster port, default:random
    targetPort: 3306  # Target backend, required
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: myapp
  labels:
    app: myapp
spec:
  ports:
  - port: 80
    nodePort: 31235 # Worker Node port to be used, default:random
    port: 31235   # cluster port, default:random
    targetPort: 80  # Target backend, required
  selector:
    app: myapp
    tier: frontend
  type: NodePort
