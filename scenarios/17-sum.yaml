apiVersion: v1
kind: Namespace
metadata:
  name: cka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: default
data:
  REPO: https://raw.githubusercontent.com/wiewioras/k8s-labs/master/scenarios/index.html
---
#This one will create /test/index.html
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-vol
  namespace: default
data:
  index.html: "get out of here!"
---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: mysql
#  namespace: default
#data:
#  MYSQL_ROOT_PASSWORD: admin-password
#  MYSQL_USER: mysql
#  MYSQL_PASSWORD: r00tme
#  MYSQL_DATABASE: omymy
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: YWRtaW4tcGFzc3dvcmQK
  MYSQL_USER: bXlzcWwK
  MYSQL_PASSWORD: cjAwdG1lCg==
  MYSQL_DATABASE: b215bXkK
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-vol
spec:
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/nginx-vol
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-vol
spec:
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/mysql-vol
    type: DirectoryOrCreate
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        securityContext:
          #runAsUser: 1000
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 80
        readinessProbe:
          exec:
            command:
              - cat
              - /usr/share/nginx/html/index.html
          periodSeconds: 3
        livenessProbe:
          httpGet:
            port: nginx-port
            path: /
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: index
        - mountPath: /usr/share/nginx/html/test/
          name: configmap
      initContainers:
      - name: gitpull
        securityContext:
          #runAsUser: 1000
          allowPrivilegeEscalation: false
        image: alpine:3.6
        env:
          - name: REPO
            valueFrom:
              configMapKeyRef:
                name: nginx
                key: REPO
        command:
          - /bin/sh
          - "-c"
          - "apk update && apk add ca-certificates wget openssl && update-ca-certificates && wget $REPO -O /data/index.html"
        volumeMounts:
        - mountPath: /data
          name: index
      volumes:
      - name: index
        persistentVolumeClaim:
          claimName: nginx-pv-claim
      - configMap:
          defaultMode: 444
          name: nginx-vol
        name: configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.6
        securityContext:
          #runAsUser: 1000
          allowPrivilegeEscalation: false
        readinessProbe:
          exec:
            command: [bash, "-c", mysql -h 127.0.0.1 -e 'SELECT 1' -u$MYSQL_USER -p$MYSQL_PASSWORD]
          initialDelaySeconds: 5
          periodSeconds: 2
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          periodSeconds: 10
          initialDelaySeconds: 10
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-vol
        envFrom:
#        - configMapRef:
#            name: mysql
        - secretRef:
            name: mysql-secrets
      volumes:
        - name: mysql-vol
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    nodePort: 32000 # Worker Node port to be used, default:random
    port: 33000   # cluster port, default:random
    targetPort: 80  # Target backend, required
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  selector:
    app: mysql
  ports:
  - protocol: TCP
    nodePort: 32002 # Worker Node port to be used, default:random
    port: 33000   # cluster port, default:random
    targetPort: 3306  # Target backend, required
