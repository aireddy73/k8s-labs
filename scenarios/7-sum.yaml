apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-vol
spec:
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/nginx-vol
    type: DirectoryOrCreate
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
          name: nginx
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: index
      initContainers:
      - name: gitpull
        image: alpine:3.6
        command:
          - /bin/sh
          - "-c"
          - "apk update && apk add ca-certificates wget openssl && update-ca-certificates && wget https://raw.githubusercontent.com/wiewioras/k8s-labs/master/scenarios/index.html -O /data/index.html"
        volumeMounts:
        - mountPath: /data
          name: index
      volumes:
      - name: index
        persistentVolumeClaim:
          claimName: nginx-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    nodePort: 32000 # Worker Node port to be used, default:random
    port: 33000   # cluster port, default:random
    targetPort: 80  # Target backend, required
